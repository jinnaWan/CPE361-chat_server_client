/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // JavaFX modules
    implementation "org.openjfx:javafx-controls:23.0.2"
    implementation "org.openjfx:javafx-fxml:23.0.2"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'Launcher'
}

javafx {
    version = "23.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Create a special launcher class
task createLauncher {
    doLast {
        def launcherFile = new File("${projectDir}/src/main/java/Launcher.java")
        launcherFile.parentFile.mkdirs()
        
        launcherFile.text = """
public class Launcher {
    public static void main(String[] args) {
        App.main(args);
    }
}
"""
    }
}

// Make compileJava depend on createLauncher
compileJava.dependsOn createLauncher

// Configure the jar task
jar {
    manifest {
        attributes 'Main-Class': 'Launcher'
    }
}

// Configure the shadowJar task for JavaFX
shadowJar {
    archiveBaseName.set('ChatApp')
    archiveClassifier.set('')
    archiveVersion.set('')
    
    // Handle module path issues
    mergeServiceFiles()
    
    // JavaFX runtime arguments
    manifest {
        attributes 'Main-Class': 'Launcher'
    }
}